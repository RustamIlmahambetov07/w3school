/* Comparing values are useful in programming, because it helps us to find answers and make decisions.

For example, you can use a comparison operator, such as the greater than (>) operator, to compare two values: */

//example 

#include <stdio.h>

int main() {
  printf("%d", 10 > 9);  // Returns 1 (true) because 10 is greater than 9
  
  return 0;
}

/* From the example above, you can see that the return value is a boolean value (1). */

// You can also compare two variables:

#include <stdio.h>

int main() {
  int x = 10;
  int y = 9;
  
  printf("%d", x > y); // Returns 1 (true) because 10 is greater than 9
  return 0;
}

// In the example below, we use the equal to (==) operator to compare different values:

#include <stdio.h>

int main() {
  printf("%d\n", 10 == 10); // Returns 1 (true), because 10 is equal to 10
  printf("%d\n", 10 == 15); // Returns 0 (false), because 10 is not equal to 15
  printf("%d", 5 == 55); // Returns 0 (false) because 5 is not equal to 55
  
  return 0;
}

// You are not limited to only compare numbers. You can also compare boolean variables, or even special structures, like arrays (which you will learn more about in a later chapter):

#include <stdio.h>
#include <stdbool.h>  // Import the boolean header file 

int main() {
  bool isHamburgerTasty = true;
  bool isPizzaTasty = true;
  printf("%d", isHamburgerTasty == isPizzaTasty);
  
  return 0;
}

// Remember to include the <stdbool.h> header file when working with bool variables.
